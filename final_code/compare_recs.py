import pandas as pd
import numpy as np
from matplotlib import pyplot as plt

Q = pd.read_csv("./newqtable4.csv") # this file could not be uploaded to github, and must be generated by training the model
recs = pd.read_csv("./final_recs4.csv")


# hardcoding the top ten most reviewed movies included in our project, with the recommendations given for them by kishan0725's project
# kishan0725's project gave 10 recommendations for each movie, but not all were included in our model
# also, attempts to search for & generate recommendations for Star Wars: Episode IV - A New Hope in kishan0725's project were unsuccessful
top_movies = {
    'Forrest Gump (1994)': ['That Thing You Do! (1996)', 'Cast Away (2000)', "Terminal, The (2004)", 'You\'ve Got Mail (1998)', "League of Their Own, A (1992)", "Polar Express, The (2004)", 'Road to Perdition (2002)'],
    'Shawshank Redemption, The (1994)': ["Green Mile, The (1999)", "Mist, The (2007)", "Along Came a Spider (2001)"],
    'Pulp Fiction (1994)': ['Reservoir Dogs (1992)', 'Bandits (2001)', '16 Blocks (2006)', 'Killing Zoe (1994)', 'Mercury Rising (1998)', 'Lucky Number Slevin (2006)', 'The Hateful Eight (2015)', 'Kill Bill: Vol. 2 (2004)'],
    'Silence of the Lambs, The (1991)': ['Red Dragon (2002)'],
    'Matrix, The (1999)': ["Matrix Revolutions, The (2003)", "Matrix Reloaded, The (2003)", 'Chain Reaction (1996)', "Day the Earth Stood Still, The (1951)", 'Timecop (1994)', 'Cloverfield (2008)', 'Bill & Ted\'s Bogus Journey (1991)', 'Dawn of the Planet of the Apes (2014)'],
    'Star Wars: Episode IV - A New Hope (1977)': [],
    'Jurassic Park (1993)': ["Lost World: Jurassic Park, The (1997)", "War of the Worlds (2005)", 'Close Encounters of the Third Kind (1977)', 'Minority Report (2002)', 'A.I. Artificial Intelligence (2001)', 'Underworld: Rise of the Lycans (2009)', 'Space Jam (1996)', 'Jaws (1975)', 'E.T. the Extra-Terrestrial (1982)'],
    'Schindler\'s List (1993)': ['Lincoln (2012)', 'Amistad (1997)', 'Kinsey (2004)', 'Munich (2005)', 'Catch Me If You Can (2002)', 'Bridge of Spies (2015)', 'Michael Collins (1996)', 'Kingdom of Heaven (2005)'],
    'Braveheart (1995)': ['Escape from Alcatraz (1979)', 'Milk (2008)'],
    'Fight Club (1999)': ["Curious Case of Benjamin Button, The (2008)", 'Seven (a.k.a. Se7en) (1995)', 'Fury (2014)', 'Burn After Reading (2008)', 'Babel (2006)', 'Meet Joe Black (1998)', 'Inglourious Basterds (2009)']
}

def our_rec_and_their_recs(movie_name, their_recs):
    print(f"For movie: {movie_name}")
    movie = recs[recs['movie name'] == movie_name]
    movie_idx = str(movie['Unnamed: 0'].values[0])

    our_rec_name = movie['recomendation name'].values[0]
    our_rec_idx = recs[recs['movie name'] == our_rec_name]['Unnamed: 0'].values[0]
    our_rec_q_score = Q[movie_idx][our_rec_idx]
    print("Our rec:")
    print(f"Q score for {our_rec_name}: {our_rec_q_score}")

    print("Their recs:")
    recs_q_scores = []
    for rec_name in their_recs:
        rec_idx = recs[recs['movie name'] == rec_name]['Unnamed: 0'].values[0]
        q_score = Q[movie_idx][rec_idx]
        print(f"Q score for {rec_name}: {q_score}")
        recs_q_scores.append(q_score)
    print(f"Mean: {np.mean(recs_q_scores)}")
    print()
    return our_rec_q_score, recs_q_scores


our_recs_q_scores = []
their_recs_q_scores = []
for movie_name in top_movies:
    ours, theirs = our_rec_and_their_recs(movie_name, top_movies[movie_name])
    our_recs_q_scores.append(ours)
    their_recs_q_scores.append(theirs)


theirs_x = []
theirs_y = []
for i in range(len(their_recs_q_scores)):
    for q_value in their_recs_q_scores[i]:
        theirs_x.append(i)
        theirs_y.append(q_value)


plt.scatter(range(len(top_movies)), our_recs_q_scores, color='red', alpha=.5, label="Our model's rec")
plt.scatter(theirs_x, theirs_y, color='blue', alpha=.5, label="Other model's recs")
plt.legend()
plt.xticks(range(len(top_movies)))
plt.xlabel("Movie")
plt.ylabel("Q value of recommendation for movie")
plt.title("Q values of recommendations for our 10 most rated movies")
plt.savefig('./q_value_comparison.png')
plt.show()